// Programs Page JavaScript
class ProgramsManager {
    constructor() {
        this.currentCategory = 'pc';
        this.programs = [];
        this.init();
    }

    async init() {
        this.bindEvents();
        await this.loadPrograms();
        this.renderPrograms();
    }

    bindEvents() {
        // Category tabs
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.addEventListener('click', (e) => {
                this.switchCategory(e.target.dataset.category);
            });
        });

        // Modal close
        const modal = document.getElementById('program-modal');
        const closeBtn = modal.querySelector('.modal-close-btn');
        
        closeBtn.addEventListener('click', () => {
            modal.classList.remove('show');
        });

        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.classList.remove('show');
            }
        });
    }

    async loadPrograms() {
        try {
            const response = await fetch('/api/programs');
            if (response.ok) {
                this.programs = await response.json();
            } else {
                console.error('Failed to load programs');
                this.programs = this.getDefaultPrograms();
            }
        } catch (error) {
            console.error('Error loading programs:', error);
            this.programs = this.getDefaultPrograms();
        }
    }

    getDefaultPrograms() {
        return [
            // PC Programs
            {
                id: 1,
                title: 'System Optimizer Pro',
                description: '–ú–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ Windows —Å–∏—Å—Ç–µ–º—ã',
                category: 'pc',
                icon: 'üöÄ',
                downloads: 1250,
                version: '2.1.0',
                size: '15.2 MB',
                features: [
                    '–û—á–∏—Å—Ç–∫–∞ —Ä–µ–µ—Å—Ç—Ä–∞ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤',
                    '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∏',
                    '–î–µ—Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞—Ü–∏—è –¥–∏—Å–∫–∞',
                    '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏'
                ],
                requirements: 'Windows 10/11, 4GB RAM, 50MB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞',
                screenshots: ['/images/optimizer1.jpg', '/images/optimizer2.jpg'],
                download_url: '#'
            },
            {
                id: 2,
                title: 'Driver Manager',
                description: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–∞–π–≤–µ—Ä–∞–º–∏',
                category: 'pc',
                icon: 'üîß',
                downloads: 890,
                version: '1.5.3',
                size: '8.7 MB',
                features: [
                    '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –¥—Ä–∞–π–≤–µ—Ä–æ–≤',
                    '–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—Ä–∞–π–≤–µ—Ä–æ–≤',
                    '–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π',
                    '–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∂–µ–ª–µ–∑–µ'
                ],
                requirements: 'Windows 7/8/10/11, 2GB RAM, 100MB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞',
                screenshots: ['/images/driver1.jpg', '/images/driver2.jpg'],
                download_url: '#'
            },
            
            // Tools
            {
                id: 3,
                title: 'Password Generator Pro',
                description: '–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–∞–¥–µ–∂–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏',
                category: 'tools',
                icon: 'üîê',
                downloads: 2100,
                version: '3.0.1',
                size: '2.1 MB',
                features: [
                    '–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è',
                    '–†–∞–∑–ª–∏—á–Ω—ã–µ –Ω–∞–±–æ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤',
                    '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª—è',
                    '–≠–∫—Å–ø–æ—Ä—Ç –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã'
                ],
                requirements: '–õ—é–±–∞—è –û–°, –≤–µ–±-–±—Ä–∞—É–∑–µ—Ä',
                screenshots: ['/images/password1.jpg', '/images/password2.jpg'],
                download_url: '#'
            },
            {
                id: 4,
                title: 'File Converter Suite',
                description: '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä —Ñ–∞–π–ª–æ–≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤',
                category: 'tools',
                icon: 'üîÑ',
                downloads: 1750,
                version: '2.8.0',
                size: '25.4 MB',
                features: [
                    '–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 200+ —Ñ–æ—Ä–º–∞—Ç–æ–≤',
                    '–ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤',
                    '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏',
                    '–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä'
                ],
                requirements: 'Windows 10/11, 8GB RAM, 500MB —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞',
                screenshots: ['/images/converter1.jpg', '/images/converter2.jpg'],
                download_url: '#'
            },
            
            // Telegram Bots
            {
                id: 5,
                title: 'Rootzsu Service Bot',
                description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ —É—Å–ª—É–≥ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤',
                category: 'bots',
                icon: 'ü§ñ',
                downloads: 3200,
                version: '4.2.1',
                size: 'Telegram Bot',
                features: [
                    '–ó–∞–∫–∞–∑ —É—Å–ª—É–≥ —á–µ—Ä–µ–∑ Telegram',
                    '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–æ–≤',
                    '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7',
                    '–°–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã Telegram Stars'
                ],
                requirements: 'Telegram –∞–∫–∫–∞—É–Ω—Ç',
                screenshots: ['/images/bot1.jpg', '/images/bot2.jpg'],
                download_url: 'https://t.me/rootzsu_bot'
            },
            {
                id: 6,
                title: 'File Manager Bot',
                description: '–ë–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞–º–∏ –∏ –æ–±–ª–∞—á–Ω—ã–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º',
                category: 'bots',
                icon: 'üìÅ',
                downloads: 1450,
                version: '1.3.0',
                size: 'Telegram Bot',
                features: [
                    '–ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤',
                    '–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–∏',
                    '–ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º',
                    '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –æ–±–ª–∞—á–Ω—ã–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏'
                ],
                requirements: 'Telegram –∞–∫–∫–∞—É–Ω—Ç',
                screenshots: ['/images/filebot1.jpg', '/images/filebot2.jpg'],
                download_url: 'https://t.me/rootzsu_files_bot'
            }
        ];
    }

    switchCategory(category) {
        this.currentCategory = category;
        
        // Update active tab
        document.querySelectorAll('.tab-btn').forEach(btn => {
            btn.classList.remove('active');
        });
        document.querySelector(`[data-category="${category}"]`).classList.add('active');
        
        this.renderPrograms();
    }

    renderPrograms() {
        const grid = document.getElementById('programs-grid');
        const loading = document.getElementById('programs-loading');
        
        loading.style.display = 'flex';
        
        setTimeout(() => {
            const filteredPrograms = this.programs.filter(program => 
                program.category === this.currentCategory
            );
            
            grid.innerHTML = filteredPrograms.map(program => this.createProgramCard(program)).join('');
            
            // Bind click events to program cards
            grid.querySelectorAll('.program-card').forEach(card => {
                card.addEventListener('click', () => {
                    const programId = parseInt(card.dataset.programId);
                    this.showProgramDetails(programId);
                });
            });
            
            loading.style.display = 'none';
        }, 500);
    }

    createProgramCard(program) {
        const downloadText = program.category === 'bots' ? '–û—Ç–∫—Ä—ã—Ç—å' : '–°–∫–∞—á–∞—Ç—å';
        const sizeText = program.category === 'bots' ? '' : `‚Ä¢ ${program.size}`;
        
        return `
            <div class="program-card" data-program-id="${program.id}">
                <div class="program-icon">${program.icon}</div>
                <h3 class="program-title">${program.title}</h3>
                <p class="program-description">${program.description}</p>
                <div class="program-meta">
                    <span class="program-category">${this.getCategoryName(program.category)}</span>
                    <span class="program-downloads">${program.downloads} –∑–∞–≥—Ä—É–∑–æ–∫</span>
                </div>
                <div class="program-actions">
                    <a href="${program.download_url}" class="btn-download" target="_blank">
                        <i class="fa-solid fa-download"></i>
                        ${downloadText}
                    </a>
                    <button class="btn-info">
                        <i class="fa-solid fa-info-circle"></i>
                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                    </button>
                </div>
                <div style="margin-top: 0.5rem; font-size: 0.8rem; color: var(--text-secondary);">
                    v${program.version} ${sizeText}
                </div>
            </div>
        `;
    }

    getCategoryName(category) {
        const names = {
            'pc': '–ü–ö',
            'tools': '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
            'bots': '–ë–æ—Ç—ã'
        };
        return names[category] || category;
    }

    showProgramDetails(programId) {
        const program = this.programs.find(p => p.id === programId);
        if (!program) return;

        const modal = document.getElementById('program-modal');
        const details = document.getElementById('program-details');
        
        const downloadText = program.category === 'bots' ? '–û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞' : '–°–∫–∞—á–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É';
        const sizeText = program.category === 'bots' ? '' : `<p><strong>–†–∞–∑–º–µ—Ä:</strong> ${program.size}</p>`;
        
        details.innerHTML = `
            <div class="program-icon">${program.icon}</div>
            <h2>${program.title}</h2>
            <p>${program.description}</p>
            
            <div class="program-info">
                <p><strong>–í–µ—Ä—Å–∏—è:</strong> ${program.version}</p>
                ${sizeText}
                <p><strong>–ó–∞–≥—Ä—É–∑–æ–∫:</strong> ${program.downloads}</p>
                <p><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${this.getCategoryName(program.category)}</p>
            </div>
            
            <div class="program-features">
                <h3>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</h3>
                <ul>
                    ${program.features.map(feature => `<li>${feature}</li>`).join('')}
                </ul>
            </div>
            
            <div class="program-requirements">
                <h4>–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:</h4>
                <p>${program.requirements}</p>
            </div>
            
            <div class="program-actions" style="margin-top: 2rem;">
                <a href="${program.download_url}" class="btn-download" target="_blank">
                    <i class="fa-solid fa-download"></i>
                    ${downloadText}
                </a>
            </div>
        `;
        
        modal.classList.add('show');
    }
}

// Initialize when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    new ProgramsManager();
});